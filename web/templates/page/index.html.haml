.row
  .col.l4.s12
    .row
      .col.s12
        .card.white.black-text
          .card-content
            %span.card-title
              .row
                .col.s10 Accounts
                .col.s2
                  %a.btn-floating.btn-med.waves-effect.waves-light.red{href: "/accounts/new"}
                    %i.material-icons add
            %ul.collection
              = for account <- @accounts do
                %li.collection-item
                  %span.title
                    = link to: account_path(@conn, :show, account) do
                      = account.name
                    = end
                  .secondary-content
                    = link to: account_path(@conn, :edit, account) do
                      %i.material-icons mode_edit
                    = end
              = end

    .row
      .col.s12
        .card.white.black-text
          .card-content
            %span.card-title Quick Transaction
            = form_for @quick_transaction_changeset, transaction_path(@conn, :create), fn f ->
              .row
                .col.l6.s12
                  .input-field
                    = number_input f, :amount, step: "0.01"
                    = label f, :amount
                .col.l6.s12
                  .input-field
                    = select f, :account_id, @account_map, prompt: "Choose an account"
              .row
                .col.l8.s12
                  .input-field
                    = text_input f, :note
                    = label f, :note
                .col.l4.s12
                  .input-field
                    = submit "Submit", class: "btn btn-primary waves-effect"
                .input-field= hidden_input f, :happened_at, value: Ecto.Date.utc
            = end
          .card-action
            %a{href: "transactions/"} View all

    .row
      .col.s12
        .card.white.black-text
          .card-content
            %span.card-title
              .row
                .col.s10 Recurring Transactions
          .card-action
            = link "View All #{@recurrence_count}", to: recurrence_path(@conn, :index)

  .col.l8.s12
    .card.white.black-text
      .card-content
        .card-title Forecast
        #forecast-root
        .row
          .col.s6
            %input#from-date.datepicker{type: "date"}
            %label{for: 'from-date'} From
          .col.s6
            %input#to-date.datepicker{type: "date"}
            %label{for: 'to-date'} To
